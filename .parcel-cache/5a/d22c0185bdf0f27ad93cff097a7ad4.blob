var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "initStarComp", ()=>initStarComp
);
var _state = require("../../state");
function initStarComp() {
    customElements.define("star-comp", class extends HTMLElement {
        constructor(){
            super();
            this.shadow = this.attachShadow({
                mode: "open"
            });
            this.syncWithState = ()=>{
                const lastState = _state.state.getState();
                if (lastState.result == "perdi") {
                    this.img = require("url:../../img/perdiste.svg");
                    this.color = "red";
                }
                if (lastState.result == "gane") {
                    this.img = require("url:../../img/ganaste.svg");
                    this.color = "green";
                }
                if (lastState.result == "empate") {
                    this.img = require("url:../../img/empataste.svg");
                    this.color = "blueviolet";
                }
                this.render();
            };
            this.render = ()=>{
                this.shadow.innerHTML = `\n          <div class="scoreCont">\n            <img class="starEl" src="${this.img}"/>\n            <div class="sheet"></div>\n          </div>\n        `;
                const style = document.createElement("style");
                style.innerHTML = `\n            .starEl{\n                height: 200px;\n                width: auto;\n                animation:lower 2s linear infinite;\n                z-index: 2;\n            }\n            .scoreCont{\n                height: 100vh;\n                width: 100%;\n                display: flex;\n                justify-content: center;\n                align-items: center;\n            }\n            .sheet{\n              height: 100%;\n              width: 100%;\n              position: absolute;\n              background: ${this.color};\n              z-index: 1;\n            }\n            @keyframes lower{\n                0%{\n                    opacity: .7;\n                }\n                50%{\n                    opacity: 1;\n                }\n                100%{\n                    opacity: .7;\n                }\n            }\n        `;
                this.shadow.appendChild(style);
            };
            _state.state.subscribe(()=>{
                this.syncWithState();
            });
            this.syncWithState();
        }
    });
}
